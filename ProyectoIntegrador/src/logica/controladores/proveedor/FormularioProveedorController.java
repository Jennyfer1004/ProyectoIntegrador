package logica.controladores.proveedor;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;
import datos.DAOS.ProveedorDAO;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import logica.ProveedorService;
import presentacion.vistas.proveedor.GestionProveedoresView;

public class FormularioProveedorController implements Initializable {
	@FXML
	private Button botonVolverPrincipal;
	@FXML
	private Button botonCancelar;
	@FXML
	private Button botonRegistrar;
	@FXML
	private TextField inputId;
	@FXML
	private TextField inputNombreEmpresa;
	@FXML
	private TextField inputDireccion;
	@FXML
	private TextField inputTelefono;
	@FXML
	private TextField inputCorreo;
	@FXML
	private TextField inputProductosSuministrados;
	@FXML
	private TextField inputEstado;
	
 private ProveedorDAO proveedorDAO;
    
    private ProveedorService proveedorService;

	// Event Listener on Button[#botonVolverPrincipal].onMouseClicked
	GestionProveedoresView gpv = new GestionProveedoresView();

	@FXML
	public void volverAprincipal(@SuppressWarnings("exports") MouseEvent event) throws IOException {
		// TODO Autogenerated
		gpv.show((Stage)botonVolverPrincipal.getScene().getWindow());
	}
	// Event Listener on Button[#botonRegistrar].onMouseClicked
	@FXML
	public void onRegistrarProveedor(@SuppressWarnings("exports") MouseEvent event) {
		// TODO Autogenerated
		//String id = inputId.getText();
    	String nombreEmpresa = inputNombreEmpresa.getText();
    	String direccion = inputDireccion.getText();
    	String telefono = inputTelefono.getText();
    	String correo = inputCorreo.getText();
    	String productosSuministrados = inputProductosSuministrados.getText();
    	String estado = inputEstado.getText();
    	
    	boolean insercionExitosa = proveedorDAO.registrarProveedor(nombreEmpresa, direccion, telefono, correo, productosSuministrados, estado);
        
        // Si la inserci√≥n fue exitosa, agregar el Proveedor a la lista observable
        if (insercionExitosa) {
        	mostrarAlerta("CONFIRMACION", "Se registro el proveedor correctamente" ,AlertType.CONFIRMATION);
        	proveedorService.agregarProveedor(nombreEmpresa, direccion, telefono, correo, productosSuministrados,estado);
        	
        }else {
        	mostrarAlerta("Registro fallido", "No se pudo crear, verifica los campos " ,AlertType.ERROR);
        }
        
    	
	}
	
	private void mostrarAlerta(String titulo, String mensaje, AlertType tipo) {
        Alert alerta = new Alert(tipo);
        alerta.setTitle(titulo);
        alerta.setHeaderText(null);
        alerta.setContentText(mensaje);
        alerta.showAndWait();
    }
	
	@Override
    public void initialize(URL arg0, ResourceBundle arg1) {
    	 proveedorService = new ProveedorService();
    	 proveedorDAO = new ProveedorDAO();
    }

}
